name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  web:
    name: Web (lint / typecheck / build)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable corepack + pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate
          pnpm -v

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store
          key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-${{ runner.os }}-

      - name: Install deps (workspace)
        run: pnpm install --no-frozen-lockfile

      - name: Lint (ESLint)
        run: pnpm --filter web lint

      - name: Type-check (TS)
        run: pnpm --filter web typecheck

      - name: Build (Next)
        run: pnpm --filter web build

  api:
    name: API (ruff / mypy / pytest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('apps/api/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        working-directory: apps/api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
          pip install -e .

      # Run Ruff from the repo root and lint the API directory explicitly.
      - name: Ruff (lint)
        working-directory: .
        run: ruff check ./apps/api --fix

      # Run mypy from the repo root so it sees the full tree.
      - name: Mypy (type-check from repo root)
        working-directory: .
        run: mypy .

      - name: Pytest
        working-directory: apps/api
        run: pytest -q

  docker-build:
    name: Docker build (api+web dev images)
    runs-on: ubuntu-latest
    needs: [web, api]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API dev image
        run: docker build -f apps/api/Dockerfile.dev -t mb-api:ci .

      - name: Build Web dev image
        run: docker build -f apps/web/Dockerfile.dev -t mb-web:ci .
